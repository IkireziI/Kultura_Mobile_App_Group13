import 'package:firebase_auth/firebase_auth.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class AuthService {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  // Sign up method
  Future<User?> signup({
    required String name,
    required String email,
    required String password,
    required BuildContext context,
  }) async {
    try {
      // Create user with email and password
      UserCredential userCredential = await _auth.createUserWithEmailAndPassword(
        email: email,
        password: password,
      );

      // Get the user ID
      User? user = userCredential.user;

      // Create a document in Firestore to store user data
      await _firestore.collection('users').doc(user?.uid).set({
        'name': name,
        'email': email,
        'createdAt': FieldValue.serverTimestamp(),
        // Add other user data you might need
        'username': '', // Will be updated later
        'profilePictureUrl': '', // Will be updated later
        'posts': [], // Empty list for future posts
        'stories': [], // Empty list for future stories
      });

      return user;
    } on FirebaseAuthException catch (e) {
      if (e.code == 'email-already-in-use') {
        throw Exception("The email is already in use.");
      } else if (e.code == 'weak-password') {
        throw Exception("The password is too weak.");
      } else {
        throw Exception("Something went wrong. Please try again.");
      }
    } catch (e) {
      rethrow;
    }
  }

  // Sign in method
  Future<String> signin({
    required String email,
    required String password,
    required BuildContext context,
  }) async {
    try {
      // Attempt to sign in the user with email and password
      await _auth.signInWithEmailAndPassword(email: email, password: password);

      return "Successfully logged in";
    } on FirebaseAuthException catch (e) {
      if (e.code == 'user-not-found') {
        return "No user found for that email.";
      } else if (e.code == 'wrong-password') {
        return "Wrong password provided.";
      } else {
        return "Something went wrong. Please try again later.";
      }
    } catch (e) {
      return "An unknown error occurred: $e";
    }
  }
}
